version: "2"
services:
  dbwriter:
    build:
      context: ./dbwriter
      dockerfile: /deployments/Dockerfile
    command: >
      sh -c "./wait-for-postgres.sh pgdb && ./wait-for-it.sh kafka:9092 -t 0 && ./main" 
    container_name: dbwriter
    depends_on:
      - kafka
      - pgdb
    environment:
      - KAFKA_HOST=kafka:9092
      - POSTGRES_PASSWORD=postgres
      - CONFIG_PATH=/app/dbwriter/config/config.yml
    volumes:
      - ./dbwriter/config/config.yml:/app/dbwriter/config/config.yml
      - ./dbwriter/temp/:/app/dbwriter/temp/
    networks:
      - kafka-network
      - csv-network

  pgdb:
    image: postgres:latest
    container_name: pgdb
    restart: always
    ports:
      - 5436:5432
    environment:
      - POSTGRES_DB=patients
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./dbwriter/pgdata:/var/lib/postgresql/data
      - ./dbwriter/temp:/csv
    networks:
      - csv-network
  
  server:
    build: 
      context: ./server
      dockerfile: /deployments/Dockerfile
    container_name: server
    command: >
      sh -c "./wait-for-it.sh kafka:9092 -t 0 && ./main" 
    depends_on:
      - kafka
    environment:
      - KAFKA_HOST=kafka:9092
      - CONFIG_PATH=/app/server/config/config.yml
    ports:
      - 80:80
    volumes:
      - ./server/config/config.yml:/app/server/config/config.yml
    networks:
      - kafka-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge
  csv-network:
    driver: bridge